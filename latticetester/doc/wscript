#!/usr/bin/env python
# coding: utf-8

from waflib import Utils, Task, Build

class doxygen(Task.Task):

    def run(self):
        src = self.inputs[0].abspath()
        cmd = '%s %s' % (self.env.get_flat('DOXYGEN'), src)
        cwd = self.generator.bld.path.abspath()
        return self.exec_command(cmd, cwd=cwd)

    def post_run(self):
        html = self.generator.bld.path.find_dir('doc').get_bld().find_dir('html')
        if html:
            outputs = html.ant_glob('**/*', quiet=True)
            for x in outputs:
                x.sig = Utils.h_file(x.abspath())
            self.outputs = outputs

def build(ctx):
    if not ctx.env.DOXYGEN:
        print('not building documentation; Doxygen (http://www.stack.nl/~dimitri/doxygen/) is missing')
        return

    ctx.post_mode = Build.POST_LAZY

    # Doxyfile
    doc_dir = ctx.root.find_node(ctx.variant_dir).make_node('doc')
    ctx(features='subst',
            source='Doxyfile.in',
            target='Doxyfile',
            DOCDIR=ctx.path.abspath(),
            TOPDIR=ctx.top_dir,
            OUTDIR=doc_dir.abspath(),
            LATTICETESTER_VERSION=ctx.set_version('latticetester'))

    # Doxygen
    dox = doxygen(env=ctx.env)
    dox.set_inputs([doc_dir.find_or_declare('Doxyfile')]
        + ctx.path.ant_glob('dox/*.dox')
        + ctx.path.ant_glob('include/latticetester/*.h')
        + ctx.path.ant_glob('include/latticetester/**/*.h'))
    dox.set_outputs(ctx.path.find_or_declare('html/index.html'))
    ctx.add_to_group(dox)

    # install files
    ctx.add_group()    
    html = ctx.path.find_dir('.').get_bld().find_dir('html')
    if html:
        ctx.install_files('${DOCDIR}/latticetester/html', html.ant_glob('**/*') , cwd=html, relative_trick=True)
        ctx.install_files('${DOCDIR}/latticetester', ctx.path.find_node('index.html'))

