// [[Rcpp::export]]
List computePoints(){
  std::vector<BinaryMatrix> matrices = {{ matrices }};
  unsigned int m = matrices[0].size();
  unsigned int interlacing = {{interlacing}};
  
  std::vector<unsigned int> graycode = std::vector<unsigned int>();
  for(unsigned int i=0; i < pow(2, m); i++){
    graycode.push_back(getmsb(((i >> 1) ^ i)^(((i+1) >> 1) ^ (i+1))));
  }
  
  
  std::vector<std::vector<double>> myPoints = points(matrices, graycode, interlacing);
  List res;
  for(unsigned int i = 0; i < myPoints.size(); ++i)
  {
    res.push_back(NumericVector::import(myPoints[i].begin(), myPoints[i].end()));
  }
  return res;
}

/*** R
myPoints <- computePoints()
*/
